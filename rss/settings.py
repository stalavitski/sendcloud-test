"""
Django settings for rss project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# @TODO make it env configurable
SECRET_KEY = 'q%^v09twt@0dy=*24ll-cdm^w+xdnprz^&)4wq8)9h2k!ht4om'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # @TODO make it env configurable

ALLOWED_HOSTS = ['0.0.0.0']  # @TODO make it env configurable


# Application definition

INSTALLED_APPS = [
    # Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 3rd-party apps
    'drf_yasg',
    'rest_framework',
    'rest_framework.authtoken',
    # Local apps
    'feeds.apps.FeedsConfig',
    'users.apps.UsersConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rss.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rss.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'db',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'


# djangorestframework

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication'
    ],
    'DEFAULT_PAGINATION_CLASS':
        'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_PARSER_CLASSES': [
        'djangorestframework_camel_case.parser.CamelCaseJSONParser'
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'djangorestframework_camel_case.render.CamelCaseJSONRenderer'
    ],
    'PAGE_SIZE': 10,
}


# celery

CELERY_BROKER_URL = 'redis://redis:6379'
CELERY_RESULT_BACKEND = 'redis://redis:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

CELERY_BEAT_SCHEDULE = {
    'update_feeds': {
        'task': 'feeds.tasks.update_feeds',
        'schedule': crontab('*/10'),  # execute every 10 minutes
    },
}


# feeds

MAX_RETRIES = 5


# drf-yasg (API Specification)

OPENAPI_TITLE = 'RSS API'
OPENAPI_CONTACT = 'a.stalavitski@gmail.com'
OPENAPI_DESCRIPTION = (
    '**Authentication**'
    '<br/>'
    'all endpoints except _/users/auth/_ and _/users/register/_ requires '
    'authentication token in order to access. To obtain token use '
    '_/users/auth/_ endpoint. Pass token as Authorization header with Token '
    'prefix.'
    '<br/>'
    'Example:'
    '<br/><br/>'
    '`Authorization: Token 226d005e6a98cfe5fbe65a8051b323211aaa6c77`'
    '<br/><br/>'
    '**Resources**'
    '<br/><br/>'
    '`/users/` - Registration and auth.'
    '<br/><br/>'
    '`/feeds/subscriptions/` - RSS feed subscriptions.'
    '<br/><br/>'
    '`/feeds/` - RSS feed.'
    '<br/><br/>'
    '`/feeds/items/` - RSS feed items.'
)
OPENAPI_LICENSE = 'BSD License'
OPENAPI_VERSION = 'v1'
OPENAPI_TERMS = 'https://www.google.com/policies/terms/'

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
      'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      }
   }
}
